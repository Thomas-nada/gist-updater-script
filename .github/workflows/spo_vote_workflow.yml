# This is the name of the workflow that will appear in the "Actions" tab of your GitHub repository.
name: Track SPO Governance Votes

# This section defines when the workflow will run.
on:
  # This runs the workflow on a schedule. The 'cron' syntax '0 * * * *' means it runs at the start of every hour.
  schedule:
    - cron: '0 * * * *'

  # This allows you to run the workflow manually from the "Actions" tab.
  workflow_dispatch:

# This section defines the jobs to be executed.
jobs:
  build:
    # This specifies that the job will run on a virtual machine with the latest version of Ubuntu.
    runs-on: ubuntu-latest

    # This section lists the individual steps that make up the job.
    steps:
      # Step 1: Checks out your repository's code onto the runner, so the script can be accessed.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Sets up the specified version of Python.
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Installs the Python libraries your script needs to run.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # Step 4: Runs the Python script that tracks SPO votes.
      - name: Run Python script to track SPO votes
        env:
          # This securely passes your repository secrets to the script as environment variables.
          # It uses the dedicated secret for the SPO vote Gist.
          GIST_ID: ${{ secrets.SPO_VOTE_GIST_ID }}
          # The same GitHub token can be reused as it has the necessary 'gist' permission.
          GITHUB_TOKEN: ${{ secrets.GIST_UPDATE_TOKEN }}
          # This adds the new, required API key for the Maestro service.
          MAESTRO_API_KEY: ${{ secrets.MAESTRO_API_KEY }}
        # This is the command that executes your new script.
        run: python spo_vote_tracker.py

